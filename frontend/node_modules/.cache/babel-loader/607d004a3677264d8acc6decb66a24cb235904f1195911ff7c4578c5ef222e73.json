{"ast":null,"code":"var _jsxFileName = \"/Users/ggpark/Desktop/git/TCM/test-case-manager/src/TestCaseApp.js\",\n  _s = $RefreshSig$();\n// src/TestCaseApp.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestCaseApp = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [testCases, setTestCases] = useState([]);\n  const [newCase, setNewCase] = useState({\n    project_id: '',\n    function: '',\n    unit: '',\n    description: ''\n  });\n  const [selectedTestCase, setSelectedTestCase] = useState(null);\n  const [testResults, setTestResults] = useState([]);\n  const [newResult, setNewResult] = useState({\n    result: 'N/T',\n    notes: ''\n  });\n  useEffect(() => {\n    fetchProjects();\n    fetchTestCases();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error('프로젝트 조회 오류:', error);\n    }\n  };\n  const fetchTestCases = async () => {\n    try {\n      const response = await axios.get('/testcases');\n      setTestCases(response.data);\n    } catch (error) {\n      console.error('테스트 케이스 조회 오류:', error);\n    }\n  };\n  const addTestCase = async () => {\n    try {\n      await axios.post('/testcases', newCase);\n      fetchTestCases(); // 테스트 케이스 목록 새로 고침\n      setNewCase({\n        project_id: '',\n        function: '',\n        unit: '',\n        description: ''\n      }); // 입력 필드 초기화\n    } catch (error) {\n      console.error('테스트 케이스 추가 오류:', error);\n    }\n  };\n  const fetchTestResults = async testCaseId => {\n    try {\n      const response = await axios.get(`/testresults/${testCaseId}`);\n      setTestResults(response.data);\n    } catch (error) {\n      console.error('테스트 결과 조회 오류:', error);\n    }\n  };\n  const addTestResult = async () => {\n    if (!selectedTestCase) return;\n    try {\n      await axios.post('/testresults', {\n        test_case_id: selectedTestCase.id,\n        result: newResult.result,\n        notes: newResult.notes\n      });\n      fetchTestResults(selectedTestCase.id);\n      setNewResult({\n        result: 'N/T',\n        notes: ''\n      });\n      fetchTestCases(); // 테스트 케이스 상태 업데이트\n    } catch (error) {\n      console.error('테스트 결과 추가 오류:', error);\n    }\n  };\n  const updateTestCaseStatus = async (testCaseId, status) => {\n    try {\n      await axios.put(`/testcases/${testCaseId}/status`, {\n        status\n      });\n      fetchTestCases();\n    } catch (error) {\n      console.error('테스트 케이스 상태 업데이트 오류:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Case Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Test Case\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: newCase.project_id,\n      onChange: e => setNewCase({\n        ...newCase,\n        project_id: e.target.value\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: project.id,\n        children: project.name\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Function\",\n      value: newCase.function,\n      onChange: e => setNewCase({\n        ...newCase,\n        function: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Unit\",\n      value: newCase.unit,\n      onChange: e => setNewCase({\n        ...newCase,\n        unit: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      value: newCase.description,\n      onChange: e => setNewCase({\n        ...newCase,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTestCase,\n      children: \"Add Test Case\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Cases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: testCases.map(testCase => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [testCase.description, \" (Status: \", testCase.status, \")\"]\n      }, testCase.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(TestCaseApp, \"3y7YelS6lp5WopJ7Xkx17+U/Wdw=\");\n_c = TestCaseApp;\nexport default TestCaseApp;\nvar _c;\n$RefreshReg$(_c, \"TestCaseApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TestCaseApp","_s","projects","setProjects","testCases","setTestCases","newCase","setNewCase","project_id","function","unit","description","selectedTestCase","setSelectedTestCase","testResults","setTestResults","newResult","setNewResult","result","notes","fetchProjects","fetchTestCases","response","get","data","error","console","addTestCase","post","fetchTestResults","testCaseId","addTestResult","test_case_id","id","updateTestCaseStatus","status","put","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","project","name","type","placeholder","onClick","testCase","_c","$RefreshReg$"],"sources":["/Users/ggpark/Desktop/git/TCM/test-case-manager/src/TestCaseApp.js"],"sourcesContent":["// src/TestCaseApp.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TestCaseApp = () => {\n    const [projects, setProjects] = useState([]);\n    const [testCases, setTestCases] = useState([]);\n    const [newCase, setNewCase] = useState({ project_id: '', function: '', unit: '', description: '' });\n    const [selectedTestCase, setSelectedTestCase] = useState(null);\n    const [testResults, setTestResults] = useState([]);\n    const [newResult, setNewResult] = useState({ result: 'N/T', notes: '' });\n\n    useEffect(() => {\n        fetchProjects();\n        fetchTestCases();\n    }, []);\n\n    const fetchProjects = async () => {\n        try {\n            const response = await axios.get('/projects');\n            setProjects(response.data);\n        } catch (error) {\n            console.error('프로젝트 조회 오류:', error);\n        }\n    };\n\n    const fetchTestCases = async () => {\n        try {\n            const response = await axios.get('/testcases');\n            setTestCases(response.data);\n        } catch (error) {\n            console.error('테스트 케이스 조회 오류:', error);\n        }\n    };\n\n    const addTestCase = async () => {\n        try {\n            await axios.post('/testcases', newCase);\n            fetchTestCases();  // 테스트 케이스 목록 새로 고침\n            setNewCase({ project_id: '', function: '', unit: '', description: '' });  // 입력 필드 초기화\n        } catch (error) {\n            console.error('테스트 케이스 추가 오류:', error);\n        }\n    };\n\n    const fetchTestResults = async (testCaseId) => {\n        try {\n            const response = await axios.get(`/testresults/${testCaseId}`);\n            setTestResults(response.data);\n        } catch (error) {\n            console.error('테스트 결과 조회 오류:', error);\n        }\n    };\n\n    const addTestResult = async () => {\n        if (!selectedTestCase) return;\n        \n        try {\n            await axios.post('/testresults', {\n                test_case_id: selectedTestCase.id,\n                result: newResult.result,\n                notes: newResult.notes\n            });\n            fetchTestResults(selectedTestCase.id);\n            setNewResult({ result: 'N/T', notes: '' });\n            fetchTestCases(); // 테스트 케이스 상태 업데이트\n        } catch (error) {\n            console.error('테스트 결과 추가 오류:', error);\n        }\n    };\n\n    const updateTestCaseStatus = async (testCaseId, status) => {\n        try {\n            await axios.put(`/testcases/${testCaseId}/status`, { status });\n            fetchTestCases();\n        } catch (error) {\n            console.error('테스트 케이스 상태 업데이트 오류:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Test Case Manager</h1>\n            <h2>Add Test Case</h2>\n            <select \n                value={newCase.project_id} \n                onChange={(e) => setNewCase({ ...newCase, project_id: e.target.value })}\n            >\n                <option value=\"\">Select Project</option>\n                {projects.map(project => (\n                    <option key={project.id} value={project.id}>{project.name}</option>\n                ))}\n            </select>\n            <input \n                type=\"text\" \n                placeholder=\"Function\" \n                value={newCase.function} \n                onChange={(e) => setNewCase({ ...newCase, function: e.target.value })} \n            />\n            <input \n                type=\"text\" \n                placeholder=\"Unit\" \n                value={newCase.unit} \n                onChange={(e) => setNewCase({ ...newCase, unit: e.target.value })} \n            />\n            <input \n                type=\"text\" \n                placeholder=\"Description\" \n                value={newCase.description} \n                onChange={(e) => setNewCase({ ...newCase, description: e.target.value })} \n            />\n            <button onClick={addTestCase}>Add Test Case</button>\n\n            <h2>Test Cases</h2>\n            <ul>\n                {testCases.map(testCase => (\n                    <li key={testCase.id}>\n                        {testCase.description} (Status: {testCase.status})\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TestCaseApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
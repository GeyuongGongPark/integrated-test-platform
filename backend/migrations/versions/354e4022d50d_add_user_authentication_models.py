"""Add user authentication models

Revision ID: 354e4022d50d
Revises: 
Create Date: 2025-08-13 16:59:03.641699

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '354e4022d50d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 기존 users 테이블을 업그레이드
    with op.batch_alter_table('users', schema=None) as batch_op:
        # 필요한 컬럼들이 이미 존재하는지 확인하고 추가
        try:
            batch_op.add_column(sa.Column('password_hash', sa.String(length=255), nullable=True))
        except:
            pass  # 이미 존재하는 경우 무시
        
        try:
            batch_op.add_column(sa.Column('first_name', sa.String(length=50), nullable=True))
        except:
            pass
        
        try:
            batch_op.add_column(sa.Column('last_name', sa.String(length=50), nullable=True))
        except:
            pass
        
        try:
            batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        except:
            pass
    
    # UserSessions 테이블이 이미 존재하는지 확인
    try:
        op.create_table('UserSessions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('session_token', sa.String(length=255), nullable=False),
        sa.Column('ip_address', sa.String(length=45), nullable=True),
        sa.Column('user_agent', sa.Text(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('session_token')
        )
    except:
        pass  # 이미 존재하는 경우 무시
    
    # 기존 테이블들 정리 (존재하지 않는 경우 무시)
    try:
        op.drop_table('PerformanceTestResults')
    except:
        pass
    
    try:
        op.drop_table('screenshot')
    except:
        pass
    
    try:
        with op.batch_alter_table('user', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('email'))
            batch_op.drop_index(batch_op.f('username'))
        op.drop_table('user')
    except:
        pass
    
    try:
        op.drop_table('performance_test_result')
    except:
        pass
    
    try:
        op.drop_table('test_case')
    except:
        pass
    
    try:
        op.drop_table('performance_test')
    except:
        pass
    
    try:
        op.drop_table('test_result')
    except:
        pass
    
    try:
        op.drop_table('test_cases')
    except:
        pass
    
    try:
        op.drop_table('project')
    except:
        pass
    
    try:
        op.drop_table('test_runs')
    except:
        pass
    
    try:
        with op.batch_alter_table('users', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('email'))
            batch_op.drop_index(batch_op.f('username'))
    except:
        pass

    # users 테이블은 삭제하지 않음 (업그레이드됨)
    
    try:
        op.drop_table('dashboard_summary')
    except:
        pass
    
    try:
        op.drop_table('bugs')
    except:
        pass
    
    try:
        op.drop_table('automation_test')
    except:
        pass
    
    try:
        op.drop_table('automation_test_result')
    except:
        pass
    
    try:
        op.drop_table('AutomationTestResults')
    except:
        pass
    
    try:
        op.drop_table('folder')
    except:
        pass
    
    # AutomationTests 테이블 업그레이드
    try:
        with op.batch_alter_table('AutomationTests', schema=None) as batch_op:
            try:
                batch_op.add_column(sa.Column('creator_id', sa.Integer(), nullable=True))
            except:
                pass
            
            try:
                batch_op.alter_column('name',
                       existing_type=mysql.VARCHAR(length=200),
                       type_=sa.String(length=100),
                       existing_nullable=False)
            except:
                pass
            
            try:
                batch_op.alter_column('script_path',
                       existing_type=mysql.VARCHAR(length=500),
                       type_=sa.String(length=255),
                       existing_nullable=True)
            except:
                pass
            
            try:
                batch_op.alter_column('environment',
                       existing_type=mysql.VARCHAR(length=100),
                       type_=sa.String(length=50),
                       existing_nullable=True)
            except:
                pass
            
            try:
                batch_op.create_foreign_key(None, 'users', ['creator_id'], ['id'])
            except:
                pass
            
            try:
                batch_op.drop_column('test_type')
            except:
                pass
    except:
        pass

    # DashboardSummaries 테이블 업그레이드
    try:
        with op.batch_alter_table('DashboardSummaries', schema=None) as batch_op:
            try:
                batch_op.alter_column('environment',
                       existing_type=mysql.VARCHAR(length=100),
                       type_=sa.String(length=50),
                       nullable=False)
            except:
                pass
    except:
        pass

    # Folders 테이블 업그레이드
    try:
        with op.batch_alter_table('Folders', schema=None) as batch_op:
            try:
                batch_op.create_foreign_key(None, 'projects', ['project_id'], ['id'])
            except:
                pass
            
            try:
                batch_op.create_foreign_key(None, 'Folders', ['parent_folder_id'], ['id'])
            except:
                pass
            
            try:
                batch_op.drop_column('name')
            except:
                pass
            
            try:
                batch_op.drop_column('parent_id')
            except:
                pass
    except:
        pass

    # PerformanceTests 테이블 업그레이드
    try:
        with op.batch_alter_table('PerformanceTests', schema=None) as batch_op:
            try:
                batch_op.add_column(sa.Column('creator_id', sa.Integer(), nullable=True))
            except:
                pass
            
            try:
                batch_op.alter_column('name',
                       existing_type=mysql.VARCHAR(length=200),
                       type_=sa.String(length=100),
                       existing_nullable=False)
            except:
                pass
            
            try:
                batch_op.alter_column('script_path',
                       existing_type=mysql.VARCHAR(length=500),
                       type_=sa.String(length=255),
                       existing_nullable=True)
            except:
                pass
            
            try:
                batch_op.alter_column('environment',
                       existing_type=mysql.VARCHAR(length=100),
                       type_=sa.String(length=50),
                       existing_nullable=True)
            except:
                pass
            
            try:
                batch_op.create_foreign_key(None, 'users', ['creator_id'], ['id'])
            except:
                pass
    except:
        pass

    # Screenshots 테이블 업그레이드
    try:
        with op.batch_alter_table('Screenshots', schema=None) as batch_op:
            try:
                batch_op.add_column(sa.Column('test_case_id', sa.Integer(), nullable=False))
            except:
                pass
            
            try:
                batch_op.add_column(sa.Column('screenshot_path', sa.String(length=500), nullable=False))
            except:
                pass
            
            try:
                batch_op.add_column(sa.Column('timestamp', sa.DateTime(), nullable=True))
            except:
                pass
            
            try:
                batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
            except:
                pass
            
            try:
                batch_op.drop_constraint(batch_op.f('screenshots_ibfk_1'), type_='foreignkey')
            except:
                pass
            
            try:
                batch_op.create_foreign_key(None, 'TestCases', ['test_case_id'], ['id'])
            except:
                pass
            
            try:
                batch_op.drop_column('file_path')
            except:
                pass
            
            try:
                batch_op.drop_column('created_at')
            except:
                pass
            
            try:
                batch_op.drop_column('test_result_id')
            except:
                pass
    except:
        pass

    # TestCases 테이블 업그레이드
    try:
        with op.batch_alter_table('TestCases', schema=None) as batch_op:
            try:
                batch_op.add_column(sa.Column('priority', sa.String(length=20), nullable=True))
            except:
                pass
            
            try:
                batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
            except:
                pass
            
            try:
                batch_op.add_column(sa.Column('creator_id', sa.Integer(), nullable=True))
            except:
                pass
            
            try:
                batch_op.alter_column('name',
                       existing_type=mysql.VARCHAR(length=200),
                       type_=sa.String(length=100),
                       existing_nullable=False)
            except:
                pass
            
            try:
                batch_op.create_foreign_key(None, 'users', ['creator_id'], ['id'])
            except:
                pass
            
            try:
                batch_op.drop_column('remark')
            except:
                pass
            
            try:
                batch_op.drop_column('script_path')
            except:
                pass
            
            try:
                batch_op.drop_column('expected_result')
            except:
                pass
            
            try:
                batch_op.drop_column('sub_category')
            except:
                pass
            
            try:
                batch_op.drop_column('detail_category')
            except:
                pass
            
            try:
                batch_op.drop_column('automation_code_path')
            except:
                pass
            
            try:
                batch_op.drop_column('main_category')
            except:
                pass
            
            try:
                batch_op.drop_column('folder_id')
            except:
                pass
            
            try:
                batch_op.drop_column('pre_condition')
            except:
                pass
    except:
        pass

    # TestExecutions 테이블 업그레이드
    try:
        with op.batch_alter_table('TestExecutions', schema=None) as batch_op:
            try:
                batch_op.drop_constraint(batch_op.f('testexecutions_ibfk_1'), type_='foreignkey')
            except:
                pass
            
            try:
                batch_op.create_foreign_key(None, 'TestCases', ['test_case_id'], ['id'])
            except:
                pass
            
            try:
                batch_op.drop_column('execution_time')
            except:
                pass
            
            try:
                batch_op.drop_column('created_at')
            except:
                pass
            
            try:
                batch_op.drop_column('result_data')
            except:
                pass
    except:
        pass

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('TestExecutions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('result_data', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('execution_time', mysql.FLOAT(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('testexecutions_ibfk_1'), 'TestCases', ['test_case_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('TestCases', schema=None) as batch_op:
        batch_op.add_column(sa.Column('pre_condition', mysql.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('folder_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('main_category', mysql.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('automation_code_path', mysql.VARCHAR(length=500), nullable=True))
        batch_op.add_column(sa.Column('detail_category', mysql.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('sub_category', mysql.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('expected_result', mysql.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('script_path', mysql.VARCHAR(length=500), nullable=True))
        batch_op.add_column(sa.Column('remark', mysql.TEXT(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.drop_column('creator_id')
        batch_op.drop_column('status')
        batch_op.drop_column('priority')

    with op.batch_alter_table('Screenshots', schema=None) as batch_op:
        batch_op.add_column(sa.Column('test_result_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('file_path', mysql.VARCHAR(length=500), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('screenshots_ibfk_1'), 'test_result', ['test_result_id'], ['id'])
        batch_op.drop_column('description')
        batch_op.drop_column('timestamp')
        batch_op.drop_column('screenshot_path')
        batch_op.drop_column('test_case_id')

    with op.batch_alter_table('PerformanceTests', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('environment',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('script_path',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.drop_column('creator_id')

    with op.batch_alter_table('Folders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('name', mysql.VARCHAR(length=100), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('DashboardSummaries', schema=None) as batch_op:
        batch_op.alter_column('environment',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('AutomationTests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('test_type', mysql.VARCHAR(length=50), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('environment',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('script_path',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.drop_column('creator_id')

    op.create_table('folder',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('parent_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('project_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['folder.id'], name='folder_ibfk_1'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name='folder_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('AutomationTestResults',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('execution_time', mysql.FLOAT(), nullable=True),
    sa.Column('result_data', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['AutomationTests.id'], name=op.f('automationtestresults_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('automation_test_result',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('execution_time', mysql.FLOAT(), nullable=True),
    sa.Column('result_data', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['automation_test.id'], name=op.f('automation_test_result_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('automation_test',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('test_type', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('script_path', mysql.VARCHAR(length=500), nullable=True),
    sa.Column('environment', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('parameters', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('bugs',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_case_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('jira_id', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_cases.id'], name=op.f('bugs_ibfk_1'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('dashboard_summary',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('environment', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('total_tests', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('passed_tests', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('failed_tests', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('skipped_tests', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pass_rate', mysql.FLOAT(), nullable=True),
    sa.Column('last_updated', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('users',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(length=80), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=120), nullable=False),
    sa.Column('role', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('last_login', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('username'), ['username'], unique=True)
        batch_op.create_index(batch_op.f('email'), ['email'], unique=True)

    op.create_table('test_runs',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_case_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('result', mysql.ENUM('Pass', 'Fail', 'N/T', 'N/A'), nullable=False),
    sa.Column('executed_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_cases.id'], name=op.f('test_runs_ibfk_1'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('project',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('test_cases',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fun', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('unit', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('status', mysql.ENUM('Pass', 'Fail', 'N/T', 'N/A', 'Block'), server_default=sa.text("'N/T'"), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('test_cases_ibfk_1'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('test_result',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_case_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('execution_time', mysql.FLOAT(), nullable=True),
    sa.Column('result_data', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_case.id'], name='test_result_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('performance_test',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('script_path', mysql.VARCHAR(length=500), nullable=True),
    sa.Column('environment', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('parameters', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('test_case',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('test_type', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('script_path', mysql.VARCHAR(length=500), nullable=True),
    sa.Column('folder_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['folder.id'], name='test_case_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('performance_test_result',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('execution_time', mysql.FLOAT(), nullable=True),
    sa.Column('result_data', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['performance_test.id'], name=op.f('performance_test_result_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('user',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(length=80), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=120), nullable=False),
    sa.Column('role', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('last_login', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('username'), ['username'], unique=True)
        batch_op.create_index(batch_op.f('email'), ['email'], unique=True)

    op.create_table('screenshot',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_result_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('file_path', mysql.VARCHAR(length=500), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['test_result_id'], ['test_result.id'], name=op.f('screenshot_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('PerformanceTestResults',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('execution_time', mysql.FLOAT(), nullable=True),
    sa.Column('result_data', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['PerformanceTests.id'], name=op.f('performancetestresults_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('UserSessions')
    op.drop_table('Users')
    # ### end Alembic commands ###
